{"version":3,"sources":["assets/cle-script.webp","logo.svg","components/Style.js","components/Header/Navigation.js","components/Header/HeaderContainer.js","components/About/Style.js","components/About/AboutCard.js","components/Skills/Style.js","components/Skills/SkillsCard.js","components/Project/Style.js","components/Project/ProjectCard.js","components/Home/Style.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Anchor","styled","a","NavWrap","div","ImageContainer","img","HeaderWrap","FlexHeader","NavCleanLink","Link","Navigation","to","TitleH1","h1","StyledTag","p","CleanLink","HeaderContainer","href","Paragraph","Card","Title","h3","AboutCard","FlexCardRight","FlexCardLeft","FlexWrap","ListElement","li","ListLink","SkillsCard","ProjectCard","Home","App","className","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44c1bd63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cle-script.18d02e2f.webp\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from \"styled-components\";\r\nimport img from \"../assets/cle-script.webp\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Anchor = styled.a`\r\n  font-family: \"Courier New\";\r\n  text-decoration: none;\r\n  color: #8b7878;\r\n  font-weight: bold;\r\n  padding: 0px 10px;\r\n  letter-spacing: 2.5px;\r\n\r\n  :hover {\r\n    border-bottom: 1px solid black;\r\n    color: #804747;\r\n  }\r\n`;\r\n\r\nexport const NavWrap = styled.div`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 100px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport const ImageContainer = styled.div`\r\n  background: url(${img}) no-repeat center center fixed;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\n  opacity: 0.65;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const HeaderWrap = styled.div`\r\n  display: flex;\r\n  border-bottom: 2px solid #222;\r\n  text-align: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 9999;\r\n  width: 100%;\r\n  height: 20%;\r\n  background-color: #eee;\r\n`;\r\n\r\nexport const FlexHeader = styled.div`\r\n  width: 33%;\r\n`;\r\n\r\nexport const NavCleanLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n","import React from \"react\";\r\nimport { Anchor, NavWrap, NavCleanLink } from \"../Style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <NavWrap>\r\n      <NavCleanLink to=\"/about\">\r\n        <Anchor>About</Anchor>\r\n      </NavCleanLink>\r\n      <NavCleanLink to=\"/skills\">\r\n        <Anchor>Skills</Anchor>\r\n      </NavCleanLink>\r\n      <NavCleanLink to=\"/projects\">\r\n        <Anchor>Projects</Anchor>\r\n      </NavCleanLink>\r\n    </NavWrap>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Navigation from \"./Navigation\";\r\nimport { HeaderWrap, FlexHeader, NavCleanLink } from \"../Style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TitleH1 = styled.h1`\r\n  color: #8b7878;\r\n  font-family: \"Pacifico\", cursive;\r\n  font-size: 4rem;\r\n  text-shadow: 0px 4px 4px rgba(96, 96, 96, 0.25);\r\n`;\r\n\r\nconst StyledTag = styled.p`\r\n  font-family: \"Courier New\";\r\n  color: #8b7878;\r\n  font-weight: bold;\r\n  letter-spacing: 2.5px;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 100px;\r\n`;\r\n\r\nconst CleanLink = styled.a`\r\n  text-decoration: none;\r\n  color: #8b7878;\r\n  font-family: \"Pacifico\", cursive;\r\n  font-size: 4rem;\r\n  text-shadow: 0px 4px 4px rgba(96, 96, 96, 0.25);\r\n  :hover {\r\n    color: #3b252c;\r\n    border-bottom: 3px solid #3b252c;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = () => {\r\n  return (\r\n    <HeaderWrap>\r\n      <FlexHeader>\r\n        <StyledTag>Aspiring Web Developer</StyledTag>\r\n      </FlexHeader>\r\n      <FlexHeader>\r\n        <NavCleanLink to=\"/\">\r\n          <TitleH1>\r\n            <CleanLink href=\"#\">Rob Houck</CleanLink>\r\n          </TitleH1>\r\n        </NavCleanLink>\r\n      </FlexHeader>\r\n      <Navigation />\r\n    </HeaderWrap>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n  font-family: \"Courier New\";\r\n  font-size: 1.4rem;\r\n  margin: 0 10px;\r\n  color: #3b252c;\r\n  font-weight: bold;\r\n  line-height: 1.25;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 50vw;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  position: absolute;\r\n  top: 35%;\r\n  left: 25%;\r\n  background-color: #eee;\r\n  border-bottom: 1px solid #ccafaf;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 2rem;\r\n  margin: 5px 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { Card, Title, Paragraph } from \"./Style\";\r\n\r\nconst AboutCard = () => {\r\n  return (\r\n    <Card>\r\n      <Title>About</Title>\r\n      <Paragraph>\r\n        My Name is Rob Houck I currently reside in Cleveland, OH and am looking\r\n        to make a career change. For the last twelve years I have found myself\r\n        exploring the Cleveland culinary scene. After many great years I decided\r\n        I needed a change. In October of 2019 I decided to take a leap of faith\r\n        and enrolled in Lambda School's Full Stack Web Development program.\r\n      </Paragraph>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AboutCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h3`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 2rem;\r\n  margin: 5px 10px;\r\n`;\r\n\r\nexport const FlexCardRight = styled.div`\r\n  width: 30vw;\r\n  height: 30%;\r\n  margin: 0 auto;\r\n  position: absolute;\r\n  top: 35%;\r\n  right: 15%;\r\n  background-color: #eee;\r\n  border-radius: 10px;\r\n  border-bottom: 1px solid #ccafaf;\r\n  box-shadow: 5px;\r\n`;\r\n\r\nexport const FlexCardLeft = styled.div`\r\n  width: 30vw;\r\n  height: 30%;\r\n  margin: 0 auto;\r\n  position: absolute;\r\n  top: 35%;\r\n  left: 15%;\r\n  background-color: #eee;\r\n  border-bottom: 1px solid #ccafaf;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const FlexWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ListElement = styled.li`\r\n  font-family: \"Courier New\";\r\n  font-size: 1.4rem;\r\n  margin: 0 10px;\r\n  color: #3b252c;\r\n  font-weight: bold;\r\n  line-height: 1.25;\r\n`;\r\n\r\nexport const ListLink = styled.a`\r\n  font-family: \"Courier New\";\r\n  color: #ff8f8f;\r\n  font-weight: bold;\r\n  padding: 0px 0px;\r\n  letter-spacing: 2.5px;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  FlexCardLeft,\r\n  FlexCardRight,\r\n  Title,\r\n  ListElement,\r\n  FlexWrap,\r\n  ListLink\r\n} from \"./Style\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SkillsCard = () => {\r\n  return (\r\n    <FlexWrap>\r\n      <FlexCardLeft>\r\n        <Title>Technical Skills</Title>\r\n        <ul>\r\n          <ListElement>HTML5</ListElement>\r\n          <ListElement>CSS</ListElement>\r\n          <ListElement>JavaScript</ListElement>\r\n          <ListElement>React</ListElement>\r\n          <ListElement>Node.JS</ListElement>\r\n          <ListElement>\r\n            <ListLink href=\"https://github.com/rbhouck32\">GitHub</ListLink>\r\n          </ListElement>\r\n        </ul>\r\n      </FlexCardLeft>\r\n      <FlexCardRight>\r\n        <Title>Soft Skills</Title>\r\n        <ul>\r\n          <ListElement>Works Well Under Pressure</ListElement>\r\n          <ListElement>Ability To Work in a Fast Paced Environment</ListElement>\r\n          <ListElement>Managerial Experience</ListElement>\r\n          <ListElement>The Ability to Multi-task</ListElement>\r\n        </ul>\r\n      </FlexCardRight>\r\n    </FlexWrap>\r\n  );\r\n};\r\n\r\nexport default SkillsCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n  font-family: \"Courier New\";\r\n  font-size: 1.4rem;\r\n  margin: 0 10px;\r\n  color: #3b252c;\r\n  font-weight: bold;\r\n  line-height: 1.25;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 50vw;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  position: absolute;\r\n  top: 35%;\r\n  left: 25%;\r\n  background-color: #eee;\r\n  border-bottom: 1px solid #ccafaf;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 2rem;\r\n  margin: 5px 10px;\r\n`;","import React from \"react\";\r\nimport { Card, Title, Paragraph } from \"./Style\";\r\n\r\nconst ProjectCard = () => {\r\n  return (\r\n    <Card>\r\n      <Title>Project Card</Title>\r\n      <Paragraph>Let me show you some Projects I am working On!</Paragraph>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n  font-family: \"Courier New\";\r\n  font-size: 1.4rem;\r\n  margin: 0 10px;\r\n  color: #3b252c;\r\n  font-weight: bold;\r\n  line-height: 1.25;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 50vw;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  position: absolute;\r\n  top: 35%;\r\n  left: 25%;\r\n  background-color: #eee;\r\n  border-bottom: 1px solid #ccafaf;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-size: 2rem;\r\n  margin: 5px 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { Card, Title, Paragraph } from \"./Style\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Card>\r\n      <Title>Portfolio</Title>\r\n      <Paragraph>Let me tell you a little bit about myself!</Paragraph>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\n\nimport \"./App.css\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport AboutCard from \"./components/About/AboutCard\";\nimport SkillsCard from \"./components/Skills/SkillsCard\";\nimport ProjectCard from \"./components/Project/ProjectCard\";\nimport Home from \"./components/Home/Home\";\nimport { ImageContainer } from \"./components/Style\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderContainer />\n      <ImageContainer>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={AboutCard} />\n        <Route path=\"/skills\" component={SkillsCard} />\n        <Route path=\"/projects\" component={ProjectCard} />\n      </ImageContainer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}